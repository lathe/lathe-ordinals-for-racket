name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        racket-variant: ["BC", "CS"]
        racket-version: ["8.3", "stable", "current"]
        racket-catalogs-id: ["pkgs"]
        racket-catalogs: [""]
        include:
          # We build once against racksnaps (https://racksnaps.defn.io/)
          # so that it's easier to track down working dependency
          # versions. This is essentially our package-lock.json or
          # Cargo.lock information.
          #
          - racket-variant: "CS"
            racket-version: "8.3"
            racket-catalogs-id: "racksnaps"
            racket-catalogs: |
              https://download.racket-lang.org/releases/8.3/catalog/,
              https://racksnaps.defn.io/built-snapshots/2022/01/23/catalog/
          - package: lathe-ordinals
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # This is based on
      # https://github.com/Bogdanp/setup-racket-cache-example
      - name: Record the Racket version
        run: racket --version > .racket-version
      - name: Obtain cached Racket packages, if available
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/racket
            ~/.local/share/racket
          key: "\
            ${{ runner.os }}-\
            ${{ hashFiles('.racket-version') }}-\
            ${{ matrix.racket-catalogs-id }}"
      
      - name: Install Racket '${{ matrix.racket-version }}'
        uses: Bogdanp/setup-racket@v1.7
        with:
          architecture: x64
          distribution: full
          variant: ${{ matrix.racket-variant }}
          version: ${{ matrix.racket-version }}
          catalogs: ${{ matrix.racket-catalogs }}
          
          # This is based on
          # https://github.com/soegaard/sketching/blob/bc24517203d5cae9019ee18491bb076b7299bbef/.github/workflows/push.yml
          # and we're using it so that it's possible to set the
          # catalogs without getting a permission error.
          dest: '"${HOME}/racketdist"'
          sudo: never

      # We install each package directory as a linked package, and we
      # automatically fetch all the dependencies. We don't build the
      # docs yet; we'll do that later when we're recompiling the
      # project to check its dependencies.
      #
      # The order in which we install these packages matters; if we
      # install a package before one it depends on, the command will
      # fetch a stale copy of the dependency from the Racket package
      # index.
      #
      - name: Install `${{ matrix.package }}-lib` and its dependencies
        run: raco pkg install --auto --no-docs --batch --link "./${{ matrix.package }}-lib/"
      - name: Install `${{ matrix.package }}-doc` and its dependencies
        run: raco pkg install --auto --no-docs --batch --link "./${{ matrix.package }}-doc/"
      - name: Install `${{ matrix.package }}-test` and its dependencies
        run: raco pkg install --auto --no-docs --batch --link "./${{ matrix.package }}-test/"
      - name: Install `${{ matrix.package }}` and its dependencies
        run: raco pkg install --auto --no-docs --batch --link "./${{ matrix.package }}/"

      # We recompile the collection (the single collection which all
      # these packages populate) and check that the package
      # dependencies declared in each info.rkt are correct.
      - name: Recompile to check dependencies, and build documentation
        run: raco setup --check-pkg-deps --unused-pkg-deps "${{ matrix.package }}"

      # We run tests according to the way the DrDr continuous testing
      # system does. This imitates the settings used by the Racket
      # package index at <https://pkgs.racket-lang.org/>.
      - name: Test `${{ matrix.package }}-lib`
        run: raco test --drdr --package "${{ matrix.package }}-lib"
      - name: Test `${{ matrix.package }}-doc`
        run: raco test --drdr --package "${{ matrix.package }}-doc"
      - name: Test `${{ matrix.package }}-test`
        run: raco test --drdr --package "${{ matrix.package }}-test"
      - name: Test `${{ matrix.package }}`
        run: raco test --drdr --package "${{ matrix.package }}"
